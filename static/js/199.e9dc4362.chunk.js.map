{"version":3,"file":"static/js/199.e9dc4362.chunk.js","mappings":"0LACA,EAAuB,wB,kBCkBvB,EAhBkB,SAACA,GACjB,OACE,gBAAIC,UAAWC,EAAa,WAC1B,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAI,CAACC,GAAE,kBAAaL,EAAMM,IAAOL,UAAU,MAAK,+BAKvD,EChBA,EAAuB,wBAAvB,EAAyD,2B,SCoDzD,EArCkB,SAACD,GAEjB,IAZkBO,EAAQC,EAYpBC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAGXC,EAAiD,QADnC,IAAIC,gBAAgBH,EAASI,QACVC,IAAI,QAUrCC,GA1BYV,EA0BcP,EAAMO,OA1BZC,EA0BoBK,EAzBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAE7Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CAExC,KAqBA,OACE,UAAC,EAAAe,SAAQ,YACP,gBAAKpB,UAAWC,EAAgB,UAC9B,mBAAQoB,QAbe,WAC3Bb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAYF,EAAqB,OAAS,QAGpD,EAO4C,wBAAUA,EAAqB,YAAc,kBAErF,eAAIZ,UAAWC,EAAa,SACzBe,EAAaQ,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERpB,GAAIoB,EAAMpB,GACVF,OAAQsB,EAAMtB,OACdD,KAAMuB,EAAMvB,MAHPuB,EAAMpB,GAIX,QAKZ,E,2BClDA,EAA2B,gCCc3B,EAXsB,WACpB,OACE,iBAAKL,UAAWC,EAAiB,WAC/B,6CACA,SAAC,KAAI,CAACD,UAAU,MAAMI,GAAG,aAAY,2BAK3C,ECsBA,EA5BkB,WAEd,OAAwDsB,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAAvEC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAAaC,EAAY,EAAjBC,KAAmBC,EAAK,EAALA,MAK/C,OAJAC,EAAAA,EAAAA,YAAU,WACNL,GACJ,GAAG,CAACA,IAEW,YAAXC,GACO,gBAAK7B,UAAU,WAAU,UAC5B,SAACkC,EAAA,QAAc,MAInBF,GACO,cAAGhC,UAAU,mBAAkB,SAAEgC,IAI7B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,QAMrD,SAAC,EAAS,CAAC7B,OAAQwB,KALhB,SAAC,EAAa,GAO7B,C","sources":["webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__uabm+\"};","import classes from './QuoteItem.module.css';\nimport {Link} from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`}  className='btn'>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__hsbcU\",\"sorting\":\"QuoteList_sorting__QmVZ9\"};","import { Fragment } from 'react'; \n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n\n  const history = useHistory();\n  const location = useLocation();\n  \n  const queryParams = new URLSearchParams(location.search);  \n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  \n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search:  `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`\n    })  \n      // `${location.pathname}?sort=${isSortingAscending ? \"desc\" : \"asc\"}`);\n  }\n  \n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>{`Sort ${isSortingAscending ? \"Decending\" : \"Ascending\"}`}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__gxSGD\"};","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;","import { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport {getAllQuotes} from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nconst AllQuotes = () => {\r\n\r\n    const {sendRequest, status, data:loadedQuotes, error} = useHttp(getAllQuotes, true);\r\n    useEffect(()=> {\r\n        sendRequest()\r\n    }, [sendRequest]);\r\n\r\n    if (status === \"pending\") {\r\n        return <div className=\"centered\"> \r\n            <LoadingSpinner />\r\n        </div>\r\n    };\r\n\r\n    if (error) {\r\n        return <p className=\"centered focused\">{error}</p>\r\n    };\r\n\r\n\r\n    if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n        return <NoQuotesFound />;\r\n    }\r\n\r\n\r\n    return(\r\n            <QuoteList quotes={loadedQuotes} />        \r\n    )\r\n}\r\n\r\nexport default AllQuotes;"],"names":["props","className","classes","text","author","to","id","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","onClick","push","pathname","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}